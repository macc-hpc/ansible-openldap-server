---

- name: check if database exists
  stat:
    path: "{{ openldap_maindb }}/data.mdb"
  register: maindb
  tags: openldap

- name: install openldap server and tools
  yum:
    pkg: "{{ openldap_packages }}"
  tags: openldap

- name: stop ldap service
  service:
    name: slapd
    state: stopped
  tags: openldap

- name: create directories
  file:
    path: "{{ item }}"
    state: directory
    owner: ldap
    group: ldap
    mode: 0700
  loop:
    - "{{ openldap_maindb }}"
    - "{{ openldap_accessdb }}"
    - "{{ openldap_logs }}"
  tags: openldap

- name: play nice with SELinux
  sefcontext:
    target: "{{ item }}(/.*)?"
    setype: slapd_db_t
    state: present
  loop:
    - "{{ openldap_maindb }}"
    - "{{ openldap_accessdb }}"
  tags: openldap

- name: apply new SELinux file context to filesystem
  command: restorecon -irv "{{ item }}"
  loop:
    - "{{ openldap_maindb }}"
    - "{{ openldap_accessdb }}"
  tags: openldap

- name: copy additional schema files
  copy:
    src: "{{ item }}"
    dest: "{{ openldap_schemas }}/{{ item }}"
    mode: 0644
  loop:
    - autofs.ldif
    - ldapns.ldif
    - openssh-lpk.ldif
    - sudo.ldif
  tags: openldap

- name: copy configuration template
  template:
    src: slapd.conf
    dest: /tmp/slapd.conf
    mode: 0644
    owner: ldap
  when: not maindb.stat.exists
  tags: openldap

- name: copy certificates
  copy:
    content: "{{ item.content }}"
    dest: "/etc/ssl/{{ item.dest }}"
    mode: 0600
    owner: ldap
    group: ldap
  loop:
    - { content: "{{ openldap_tls.ca }}", dest: openldap-server.ca }
    - { content: "{{ openldap_tls.cert }}", dest: openldap-server.cert }
    - { content: "{{ openldap_tls.key }}", dest: openldap-server.key }
  no_log: true
  when: openldap_tls.enabled
  tags: openldap

- name: remove previous slapd configuration
  file:
    path: "/etc/openldap/slapd.d/{{ item }}"
    state: absent
  loop:
    - cn=config
    - cn=config.ldif
  when: not maindb.stat.exists
  tags: openldap

- name: make it happen
  become: yes
  become_user: ldap
  shell: |
    set -o pipefail
    cat /tmp/slapd.conf | slapadd -F /etc/openldap/slapd.d -v -n 0
  args:
    creates: "{{ openldap_maindb }}/data.mdb"
  tags: openldap

- name: cleanup
  file:
    path: /tmp/slapd.conf
    state: absent
  tags: openldap

- name: start and enable slapd service
  service:
    name: slapd
    state: restarted
    enabled: yes
  tags: openldap
